[
    {
        "question": "¿Qué propiedad del objeto response en Express.js se usa para enviar una respuesta JSON?",
        "options": [
            "res.send()",
            "res.json()",
            "res.render()",
            "res.write()"
        ],
        "correct": 1,
        "explanation": "La propiedad res.json() en Express.js se usa para enviar una respuesta en formato JSON al cliente."
    },
    {
        "question": "¿Qué método del objeto response en Express.js se usa para redirigir a otra URL?",
        "options": [
            "res.redirect()",
            "res.relocate()",
            "res.navigate()",
            "res.send()"
        ],
        "correct": 0,
        "explanation": "El método res.redirect() se utiliza para redirigir al cliente a otra URL."
    },
    {
        "question": "¿Cuál es el método correcto para definir middleware global en una aplicación Express.js?",
        "options": [
            "app.middleware()",
            "app.use()",
            "app.route()",
            "app.listen()"
        ],
        "correct": 1,
        "explanation": "El método app.use() se utiliza para registrar middleware global en una aplicación Express.js."
    },
    {
        "question": "En una aplicación RESTful, ¿qué método HTTP se usa típicamente para eliminar un recurso?",
        "options": [
            "GET",
            "POST",
            "DELETE",
            "PUT"
        ],
        "correct": 2,
        "explanation": "El método HTTP DELETE se utiliza para eliminar un recurso en una aplicación RESTful."
    },
    {
        "question": "¿Qué método del objeto request en Express.js se usa para obtener el cuerpo de una solicitud POST?",
        "options": [
            "req.params",
            "req.body",
            "req.query",
            "req.get"
        ],
        "correct": 1,
        "explanation": "El objeto req.body contiene el cuerpo de la solicitud, pero solo estará disponible si se utiliza middleware como express.json()."
    }
]